<?php
// $Id: dart.module,v 1.23 2010/11/11 00:58:26 bleen18 Exp $

include_once('dart_tag.inc');

/**
 * The doublclick URL.
 */
define('DART_URL', 'http://ad.doubleclick.net');

/**
 * Implementation of hook_help().
 */
function dart_help($path, $arg) {
  switch ($path) {
    case 'admin/help#dart':
      $output = '<p>'. t('The DART module allows you to integrate Doubleclick ad tags onto your site.') . '</p>';
      $output .= '<p>'. t('This module provides you with a general settings form as well as the ability to create a tag (with all its associated data) in the database. You can then add a simple bit of php to your tpl.php file(s) within your theme to indicate where specific tags should be displayed.') . '</p>';
      $output .= '<p>'. t('In addition, you can tell this module about specific javascript variables that exist on your pages in order to include them in your ad tags. For example, you can include a variable called "channel" with a value of "sports".') . '</p>';
      return $output;
  }
}

/**
 * Implementation of hook_perm().
 */
function dart_perm() {
  return array('administer DART tags');
}

/**
 * Implementation of hook_menu().
 */
function dart_menu() {
  // Test pages.
  $items['admin/build/adtag/testpage'] = array(
    'title'             => 'Testpage',
    'description'       => "Displays all ad tags on one page",
    'page callback'     => 'dart_test_page',
    'access arguments'  => array('administer DART tags'),
    'weight'            => 100,
  );
  // Admin pages.
  $items['admin/build/adtag/settings'] = array(
    'title'             => 'DART Settings',
    'description'       => "Configure your site-wide DART settings.",
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('dart_admin_settings'),
    'access arguments'  => array('administer DART tags'),
    'file'              => 'dart.admin.inc',
  );
  $items['admin/build/adtag'] = array(
    'title'             => 'DART Ad Tags',
    'description'       => 'List and create DART ad tags to be placed throughout your site.',
    'page callback'     => 'dart_admin_tag_list',
    'access arguments'  => array('administer DART tags'),
    'file'              => 'dart.admin.inc',
  );
  $items['admin/build/adtag/list'] = array(
    'title'             => 'List tags',
    'type'              => MENU_DEFAULT_LOCAL_TASK,
    'weight'            => -10,
  );
  $items['admin/build/adtag/create'] = array(
    'title'             => 'Create tag',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('dart_admin_tag'),
    'access arguments'  => array('administer DART tags'),
    'type'              => MENU_LOCAL_TASK,
    'file'              => 'dart.admin.inc',
  );
  $items['admin/build/adtag/%dart_tag/edit'] = array(
    'title'             => 'Edit tag',
    'page callback'     => 'dart_tag_edit',
    'page arguments'    => array(3),
    'access arguments'  => array('administer DART tags'),
    'file'              => 'dart.admin.inc',
  );

  return $items;
}

/**
 * Implementation of hook_theme().
 */
function dart_theme() {
  return array(
    'dart_tag' => array(
      'template' => 'dart-tag',
      'arguments' => array('dtid' => '', 'class' => ''),
    ),
    'dart_noscript_tag' => array(
      'template' => 'dart-noscript-tag',
      'arguments' => array('tag' => NULL),
    ),
    'dart_test_page' => array(
      'arguments' => array('tags' => array()),
    ),
  );
}

/**
 * Implementation of hook_block().
 */
function dart_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $result = db_query('SELECT * FROM {dart_tags} WHERE block = %d', 1);
      while ($tag = db_fetch_object($result)) {
        $block['dart-tag-'. $tag->dtid]['info'] = t('DART tag: !tagname', array('!tagname' => $tag->name));
      }
      break;
    case 'configure':
      break;
    case 'save':
      break;
    case 'view':
      $dtid = ltrim($delta, 'dart-tag-');
      $block['content'] = dart_tag($dtid);
      break;
  }
  if (isset($block)) {
    return $block;
  }
}

/**
 * Wrapper function for outputting
 * themed dart tag
 */
function dart_tag($dtid, $class='') {
  $tag = dart_tag_load($dtid);
  if ($tag) {
    $output = $tag->display($class);
  }
  else {
    drupal_set_message(t('%dtid is not a valid DART tag ID.', array('%dtid' => $dtid)), 'error');
    $output = '<!-- ' . t('DART tag %dtid does not exist and could not be placed here.', array('%dtid' => $dtid)) . ' -->';
  }
  return $output;
}

/**
 * Return the adtag object matching a DART Tag ID.
 *
 * @param $dtid
 *   The DART tag's ID
 *
 * @return
 *   The adtag object with all of its metadata, if exists, FALSE otherwise.
 *   Results are statically cached.
 */
function dart_tag_load($dtid) {
  static $tags = array();

  if (!isset($tags[$dtid])) {
    $tag = new DartTag($dtid);
    $tags[$dtid] = isset($tag->dtid) ? $tag : FALSE;
    // dsm($tag);
  }

  return $tags[$dtid];
}

/**
 * Menu callback used to display DART tag edit form.
 *
 * @param $dart_tag
 *   The DART tag object
 *
 * @return
 *   Edit form
 */
function dart_tag_edit($tag) {
  if (isset($_POST['op']) && $_POST['op'] == t('Delete Tag')) {
    return drupal_get_form('dart_admin_tag_confirm_delete', $tag);
  }

  // We pass in $tag->obj because that is the data
  // as it comes out of the database. Otherwise things
  // like site and zone will be processed already.
  return drupal_get_form('dart_admin_tag', (array)$tag->obj);
}

/**
 * Delete a DART tag from the database.
 *
 * @param $dtid
 *   The DART tag's ID
 */
function dart_tag_delete($dtid) {
  $tag = new DartTag($dtid);
  db_query('DELETE FROM {dart_tags} WHERE dtid = %d', $tag->dtid);
  module_invoke_all('dart_tag', 'delete', $tag);
}

/**
 * Implementation of hook_preprocess_page().
 */
function dart_preprocess_page(&$variables) {
  $inline_js = '';

  // Include the user-defined js injection if they entered one.
  $inline_js .= variable_get('dart_js', '') . "\n";

  // Grab page variables and format them.
  $page_vars = dart_get_page_vars();

  if (!empty($page_vars)) {
    foreach ($page_vars as $key => $val) {
      $inline_js .= 'Drupal.DART.' . $key . ' = ' . ($key == "ord" ? $val : drupal_to_js($val)) . ';' . "\n";
    }
  }

  // Include the inline js & dart.js file.
  drupal_add_js(trim($inline_js, "\n"), 'inline');
  drupal_add_js(drupal_get_path('module', 'dart') . '/dart.js');

  // Regenerate scripts variable to incorporate newly added scripts.
  $variables['scripts'] = drupal_get_js();
}

/**
 * Menu callback for a dart test page.
 */
function dart_test_page() {
  // Build an array of all the tags in the database.
  $tags = array();
  $dtids = db_query('SELECT dtid FROM {dart_tags}');
  while ($dtid = db_result($dtids)) {
    $tags[] = new DartTag($dtid);
  }

  return theme('dart_test_page', $tags);
}

/**
 * Form function for the override settings at the top of the test page.
 */
function dart_test_page_form(&$form_state, $edit=array()) {
  $form['#method'] = 'get';
  $form['site'] = array(
    '#type'           => 'textfield',
    '#title'          => t('Site'),
    '#maxlength'      => 128,
    '#default_value'  => $_GET['site'],
  );
  $form['zone'] = array(
    '#type'           => 'textfield',
    '#title'          => t('Zone'),
    '#maxlength'      => 128,
    '#default_value'  => $_GET['zone'],
  );
  $form['submit'] = array(
    '#type'           => 'submit',
    '#value'          => t('Override'),
  );

  return $form;
}

/**
 * Theme function for displaying the test page.
 */
function theme_dart_test_page($tags = array()) {
  // Add css for the test page.
  drupal_add_css(drupal_get_path('module', 'dart') . '/dart.css');

  $output  = drupal_get_form('dart_test_page_form');
  $output .= '<div class="test_ads">';
  foreach ($tags as $tag) {
    if (isset($_GET['site'])) {
      $tag->site = $_GET['site'];
    }
    if (isset($_GET['zone'])) {
      $tag->zone = $_GET['zone'];
    }

    $output .= '<div class="ad_wrap">';
    $output .= '<h2>' . $tag->name . '</h2>';
    $output .= '<p class="ad_info">';

    $delim = ' | ';
    $kvs   = array('site', 'zone', 'pos', 'sz');
    foreach($kvs as $k) {
      $output .= '<span>' . $k . ' = ' . $tag->{$k} . '</span>' . $delim;
    }
    $output = rtrim($output, $delim);

    $output .= '</p>';
    $output .= theme('dart_tag', $tag->dtid);
    if (module_exists('devel')) {
      $output .= kpr($tag, TRUE);
    }
    $output .= '</div>';
  }
  $output .= '</div>';
  return $output;
}

/**
 * Preprocess the dart_tag theme hook.
 *
 * Inputs: tag_name
 *
 * @see dart-tag.tpl.php
 */
function template_preprocess_dart_tag(&$variables) {
  $tag = dart_tag_load($variables['dtid']);

  $variables['tag']     = $tag;
  $variables['slug']    = $tag->slug;
  $variables['pos']     = $tag->pos;
  $variables['sz']      = $tag->sz;
  $variables['js_tag']  = drupal_to_js($tag);
}

/**
 * Preprocess the dart_noscript_tag theme hook.
 *
 * Inputs: tag
 *
 * @see dart-noscript-tag.tpl.php
 */
function template_preprocess_dart_noscript_tag(&$variables) {
  $tag = $variables['tag'];

  $special_kvs = variable_get('dart_special_kvs', array());
  if ($special_kvs['tile']) {
    static $tile = 0;
    $tile++;
  }
  if ($special_kvs['ord']) {
    static $ord = 0;
    if ($ord == 0) {
      $ord = rand(1000000000, 9999999999) . '?';
    }
  }

  $src  = DART_URL . '/ad/' . $tag->prefix . '.' . $tag->site . '/' . $tag->zone . ';';
  $src .= 'pos=' . $tag->pos . ';';
  $src .= 'sz=' . $tag->sz . ';';

  foreach ($tag->options['keyvals'] as $key => $val) {
    foreach ($val as $v) {
      if (!$v['eval']) {
        if (is_array($v['val'])) {
          foreach ($v['val'] as $subkey => $subval) {
            $src .= $key . '=' . $subval .';';
          }
        }
        else {
          $src .= $key . '=' . $v['val'] .';';
        }
      }
    }
  }
  $src .= $tile ? 'tile=' . $tile .';' : '';
  $src .= $ord ? 'ord=' . $ord : '';

  $variables['src'] = $src;
  $variables['jump_src'] = str_ireplace('/ad/', '/jump/', $src);
}

/**
 * Returns an array of js variables to be included at the top of every page.
 */
function dart_get_page_vars() {
  $vars = array();

  // Set the dart url
  $vars['dart_url'] = DART_URL;

  // Setup page-wide Dart vals as varibales.
  foreach (variable_get('dart_special_kvs', array()) as $key => $val) {
    if (empty($val)) {
      continue;
    }
    switch ($key) {
      case 'ord':
        $vars['ord'] = "1000000000 + Math.floor(Math.random()*900000000)";
        break;
      case 'tile':
        $vars['tile'] = "0";
        break;
    }

  }
  return $vars;
}

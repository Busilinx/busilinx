<?php
// $Id: dart.install,v 1.17 2010/07/19 19:15:08 bleen18 Exp $

/**
 * @file
 * Installation file for DART module.
 */

/**
 * Implementation of hook_install().
 */
function dart_install() {
  // Create tables.
  drupal_install_schema('dart');
}

/**
 * Implementation of hook_uninstall().
 */
function dart_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('dart');

  // Remove any blocks created by DART.
  db_query("DELETE FROM {blocks} WHERE module='dart'");
}

/**
 * Implementation of hook_schema().
 */
function dart_schema() {
  $schema['dart_tags'] = array(
    'description' => 'Stores information about DART tags.',
    'fields' => array(
      'dtid'     => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "The tag's unique id."
      ),
      'active' => array(
        'type' => 'int',
        'default' => 1,
        'description' => "If true the tag can be displayed.",
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => "The tag's unique name.",
      ),
      'pos' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => "The tag's position (pos) value.",
      ),
      'sz' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => "The tag's size (sz) value.",
      ),
      'block' => array(
        'type' => 'int',
        'default' => 0,
        'description' => 'If true, a block will be created in which to display this tag.',
      ),
      'settings' => array(
        'type' => 'blob',
        'description' => "Serialized array of settings.",
      ),
    ),
    'primary key' => array('dtid'),
  );

  return $schema;
}

/**
 * Adds the 'dart_tags.slug' field to the database.
 */
function dart_update_6000() {
  $ret = array();
  db_add_field($ret, 'dart_tags', 'slug', array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'description' => "The tag's slug value."));
  return $ret;
}

/**
 * Adds the 'dart_tags.active' field to the database.
 */
function dart_update_6001() {
  $ret = array();
  db_add_field($ret, 'dart_tags', 'active', array('type' => 'int', 'default' => 1, 'description' => "If true the tag can be displayed."));
  return $ret;
}

/**
 * Creates 'dart_tag_schedule' table in the database.
 */
function dart_update_6002() {
  $ret = array();
  $schema = dart_schema();
  db_create_table($ret, 'dart_tags_schedule', $schema['dart_tags_schedule']);
  return $ret;
}

/**
 * Creates 'dart_tags.data' field in the database.
 */
function dart_update_6003() {
  $ret = array();
  db_add_field($ret, 'dart_tags', 'data', array('type' => 'blob', 'description' => "Extra data storage."));

  // If domain module is installed, set all existing tags to show up on all domains.
  if (module_exists('domain')) {
    $available_domains = domain_domains();
    foreach ($available_domains as $key => $domain) {
      $domains[] = $domain['domain_id'] == 0 ? 'zero' : $domain['domain_id'];
    }
    $ret[] = update_sql("UPDATE {dart_tags} SET data ='%s'", serialize(array('domains' => $domains)));
  }

  return $ret;
}

/**
 * Adds the 'dart_tags.scriptless' field to the database.
 */
function dart_update_6004() {
  $ret = array();
  db_add_field($ret, 'dart_tags', 'scriptless', array('type' => 'int', 'default' => 0, 'description' => "If true, the tag will be rendered without javascript."));
  return $ret;
}

/**
 * Completely rejiggering the structure of the 'dart_tags'
 * table so that future changes will not be so draconian.
 */
function dart_update_6005() {
  $ret = array();

  // Grab all the data from the existing table and rejigger it.
  $tags = array();
  $sql = "SELECT * FROM {dart_tags}";
  $results = db_query($sql);

  $ret[] = array('success' => $results !== FALSE, 'query' => check_plain($sql));
  while ($tag = db_fetch_array($results)) {
    $tag['data'] = unserialize($tag['data']);

    $tag['settings'] = array();
    $tag['settings']['options']['block']        = $tag['block'];
    $tag['settings']['options']['scriptless']   = $tag['scriptless'];
    $tag['settings']['options']['keyvals']      = addcslashes($tag['kvs'], "\n\r");
    $tag['settings']['options']['method']       = 'adj';
    $tag['settings']['site']                    = $tag['site'];
    $tag['settings']['zone']                    = $tag['zone'];
    $tag['settings']['slug']                    = $tag['slug'];
    $tag['settings']['rules']['domains']        = $tag['data']['domains'];

    $tag['settings'] = serialize($tag['settings']);
    $tags[] = $tag;
  }

  // Delete superfluous columns.
  $cols = array('block', 'scriptless', 'kvs', 'site', 'zone', 'slug', 'data');
  foreach ($cols as $col) {
    db_drop_field($ret, 'dart_tags', $col);
  }
  // Create the new 'settings' column.
  db_add_field($ret, 'dart_tags', 'settings', array('type' => 'blob', 'description' => "Serialized array of settings."));

  // Update existing rows using the data grabbed earlier.
  foreach ($tags as $tag) {
    $ret[] = update_sql("UPDATE {dart_tags} SET settings = '%s' WHERE dtid = %d", $tag['settings'], $tag['dtid']);
  }

  // Rename dart_vals to dart_special_kvs
  $special_kvs = variable_get('dart_vals', '');
  variable_set('dart_special_kvs', $special_kvs);
  variable_del('dart_vals');

  return $ret;
}

/**
 * Move the "block" setting from the "settings" field
 * to its own field so that it can be queried on.
 */
function dart_update_6006() {
  $ret = array();

  // Create the new 'block' column.
  db_add_field($ret, 'dart_tags', 'block', array('type' => 'int', 'not null' => TRUE, 'default' => 0, 'description' => "If true, a block will be created in which to display this tag."));

  // Grab the 'block' value out of 'settings'
  // and update the dart tag record.
  $sql = "SELECT * FROM {dart_tags}";
  $results = db_query($sql);

  while ($tag = db_fetch_array($results)) {
    $tag['settings'] = unserialize($tag['settings']);

    $tag['block'] = $tag['settings']['options']['block'];
    unset($tag['settings']['options']['block']);
    $tag['settings'] = serialize($tag['settings']);

    $ret[] = update_sql("UPDATE {dart_tags} SET block = %d, settings = '%s' WHERE dtid = %d", $tag['block'], $tag['settings'], $tag['dtid']);
  }
  return $ret;
}

/**
 * Rename the dart_roles variable for consistancey.
 */
function dart_update_6007() {
  $ret = array();

  $temp = variable_get('dart_roles', array());
  variable_set('dart_display_rule_roles', $temp);
  variable_del('dart_roles');

  return $ret;
}

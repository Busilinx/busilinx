<?php
// $Id: vbo_contextmenu.module,v 1.2 2010/10/26 16:40:16 jide Exp $

/**
 * @file
 * Provides a context menu for Views Bulk Operations.
 */
 
/**
 * Implementation of hook_menu().
 */
function vbo_contextmenu_menu() {
  $items = array();
  $items['admin/settings/vbo_contextmenu'] = array(
    'title' => 'VBO Context Menu',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vbo_contextmenu_settings_form'),
    'access arguments' => array('administer views'), 
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}
 
/**
 * Menu callback.
 */
function vbo_contextmenu_settings_form(&$form_state) {
  $form = array();
  $form['vbo_hide_form'] = array(
    '#type' => 'radio',
    '#title' => t('Hide Views Bulk Operations form'),
    '#default_value' => '',
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_views_pre_render().
 */
function vbo_contextmenu_views_pre_render(&$view) {
  $style = $view->display_handler->get_plugin();
  if (!$style instanceof views_bulk_operations_plugin_style || !$style->options['vbo_contextmenu']['enabled']) {
    return;
  }
  $options = $view->style_plugin->get_selected_operations();
  $path = _vbo_contextmenu_get_path();
  $output = theme('vbo_contextmenu', $options);
  drupal_add_css($path .'/jquery.contextMenu.css');
  drupal_add_css(drupal_get_path('module', 'vbo_contextmenu') .'/vbo_contextmenu.css');
  drupal_add_js(array('vbo_contextmenu' => $output), 'setting');
  drupal_add_js($path .'/jquery.contextMenu.js', 'module', 'header', TRUE);
  drupal_add_js(drupal_get_path('module', 'vbo_contextmenu') .'/vbo_contextmenu.js', 'module', 'header', TRUE);
  drupal_add_js(array('vbo_contextmenu_options' => $style->options['vbo_contextmenu']), 'setting');
}

/**
 * Implementation of hook_form_alter().
 */
function vbo_contextmenu_form_alter(&$form, $form_state, $form_id) {
  // Alter display settings form
  if ($form_id == 'views_ui_edit_display_form') {
    $style = $form_state['view']->display_handler->get_plugin();
    if ($style instanceof views_bulk_operations_plugin_style) {
      $form['style_options']['vbo_contextmenu'] = array(
        '#type' => 'fieldset',
        '#title' => t('Context menu'),
        'enabled' => array(
          '#type' => 'checkbox',
          '#title' => t('Enable context menu'),
          '#default_value' => $style->options['vbo_contextmenu']['enabled'],
        ),
        'hide_form' => array(
          '#type' => 'checkbox',
          '#title' => t('Hide operations form'),
          '#default_value' => $style->options['vbo_contextmenu']['hide_form'],
        ),
      );
    }
  }
}

/**
 * Implementation of hook_theme().
 */
function vbo_contextmenu_theme($existing, $type, $theme, $path) {
  return array(
    'vbo_contextmenu' => array(
      'arguments' => array('options' => array()),
    ),
  );
}

/**
 * Generate the HTML output for the context menu.
 *
 * @param array $options
 *   An array of menu items
 *
 * @ingroup themeable
 */
function theme_vbo_contextmenu($options) {
  $output = '<ul class="contextMenu" id="vbo_contextmenu">';
  foreach ($options as $id => $option) {
    $output .= '<li><a href="#'. $id .'">'. $option .'</a></li>';
  }
  $output .= '</ul>';
  return $output;
}

/**
 * Helper function to get the path to the library.
 */
function _vbo_contextmenu_get_path() {
  static $path;

  if (!isset($path)) {
    // Attempt with integration module.
    if (function_exists('integration_library_path')) {
    	$path = integration_library_path('jquery.contextMenu');
    }
    // Attempt with the libraries module.
    else if (function_exists('libraries_get_path')) {
      $path = libraries_get_path('jquery.contextMenu');
    }
    // Consider that library is in the module folder.
    else {
      $path = drupal_get_path('module', 'scaffold') . '/jquery.contextMenu';
    }
  }
  
  return $path;
}

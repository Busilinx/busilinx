<?php

/**
 * Implementation of hook_install()
 */
function civievent_discount_install() {
  drupal_install_schema('civievent_discount');
  drupal_set_message(t('CiviEvent Discount tables created.'));
}

/**
 * Implementation of hook_uninstall()
 */
function civievent_discount_uninstall() {
  drupal_uninstall_schema('civievent_discount');
  variable_del('civievent_discount_chars');
  variable_del('civievent_discount_chars_len');
  variable_del('civievent_discount_ignore_case');
  variable_del('civievent_discount_multiple_participants');
  drupal_set_message(t('CiviEvent Discount tables removed.'));
}

/**
 * Implementation of hook_schema()
 */
function civievent_discount_schema() {
  $schema['civievent_discount'] = array(
      'description' => t('Discount codes are stored here. CiviCRM keeps track of which codes are assigned to events.'),
      'fields' => array(
          'cid' => array('description' => t('Code ID'), 'type' => 'serial', 'unsigned' => 1, 'not null' => TRUE,),
          'code' => array('description' => t('Code'), 'type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '',),
          'description' => array('description' => t('Description'), 'type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '',),
          'amount' => array('description' => t('Amount'), 'type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '',),
          'amount_type' => array('description' => t('Amount Type'), 'type' => 'char', 'length' => 1, 'not null' => TRUE, 'default' => '',),
          'count_max' => array('description' => t('Count max'), 'type' => 'int', length => 10, 'unsigned' => 1, 'not null' => TRUE,),
          'count_use' => array('description' => t('Count use'), 'type' => 'int', length => 10, 'unsigned' => 1, 'not null' => TRUE,),
          'events' => array('description' => t('Serialized events array'), 'type' => 'text', size => 'big',),
          'pricesets' => array('description' => t('Serialized pricesets array'), 'type' => 'text', size => 'big',),
          'memberships' => array('description' => t('Serialized memberships array'), 'type' => 'text', size => 'big',),
          'organization' => array('description' => t('CiviCRM Contact ID'), 'type' => 'int', 'unsigned' => 1, 'not null' => TRUE,),
          'autodiscount' => array('description' => t('Serialized autodiscount array'), 'type' => 'text', size => 'big',),
          'expiration' => array('description' => t('Expiration date as m/d/y h:m'), 'type' => 'datetime',),
      ),
      'primary key' => array('cid, code'),
      'unique keys' => array('cid' => array('cid'), 'code' => array('code')),
  );

  /**
   * The track contains the following information relating to other tables depending on the type.
   * Event links to participants, Member links to members, Assigned links to organizations, etc.
   */
  $schema['civievent_discount_track'] = array(
      'description' => t('This is a reporting table.'),
      'fields' => array(
          'rid' => array('description' => t('Row ID'), 'type' => 'serial', 'unsigned' => 1, 'not null' => TRUE,),
          'fk_cid' => array('description' => t('The ID linked to the code.'), 'type' => 'int', 'unsigned' => 1, 'not null' => TRUE,),
          'contactid' => array('description' => t('The CiviCRM contact ID.'), 'type' => 'int', 'unsigned' => 1, 'not null' => TRUE,),
          'timestamp' => array('description' => t('Timestamp'), 'type' => 'int', 'not null' => TRUE, 'default' => 0,),
          'track' => array('description' => t('Serialized array'), 'type' => 'text', size => 'big',),
          'contribution_id' => array('description' => t('Contribution ID'), 'type' => 'int', 'unsigned' => 1,),
          'object_id' => array('description' => t('Object ID'), 'type' => 'int', 'unsigned' => 1, 'not null' => TRUE,),
          'object_type' => array('description' => t('Object Type'), 'type' => 'text', size => 'big',),
      ),
      'primary key' => array('rid, fk_cid, contactid'),
      'unique keys' => array('rid' => array('rid')),
  );

  return $schema;
}

/**
 * Implementation of hook_update()
 */
function civievent_discount_update_6000() {
  db_query("ALTER TABLE civievent_discount CHANGE percent amount varchar(255) NOT NULL DEFAULT ''");
  db_query("ALTER TABLE civievent_discount ADD COLUMN amount_type ENUM('P','M') NOT NULL DEFAULT 'P'");
  db_query("ALTER TABLE civievent_discount ADD COLUMN events longtext");

  return array();
}

// Allow pricesets
function civievent_discount_update_6001() {
  db_query("ALTER TABLE civievent_discount ADD COLUMN pricesets longtext");

  return array();
}

// Allow memberships
function civievent_discount_update_6002() {
  db_query("ALTER TABLE civievent_discount ADD COLUMN memberships longtext");

  return array();
}

// Allow a columns for number of uses and max allowed.
function civievent_discount_update_6003() {
  db_query("ALTER TABLE civievent_discount CHANGE count count_max int(10) unsigned NOT NULL");
  db_query("ALTER TABLE civievent_discount ADD COLUMN count_use int(10) unsigned NOT NULL");

  return array();
}

// Allow auto discount by membership.
function civievent_discount_update_6004() {
  db_query("ALTER TABLE civievent_discount ADD COLUMN autodiscount longtext");

  return array();
}

// Add descriptions to codes.
function civievent_discount_update_6005() {
  db_query("ALTER TABLE civievent_discount ADD COLUMN description varchar(255) NOT NULL DEFAULT ''");

  return array();
}

// Introduce reporting/tracking of code use.
function civievent_discount_update_6006() {
  $cds = civievent_discount_schema();
  $table = $cds['civievent_discount_track'];
  db_create_table($a, 'civievent_discount_track', $table);

  return array();
}

// Add organizations to codes. Allows code ownership by an organzation.
function civievent_discount_update_6007() {
  db_query("ALTER TABLE civievent_discount ADD COLUMN organization int unsigned NOT NULL");

  return array();
}

// Add expiration to codes.
function civievent_discount_update_6008() {
  db_query("ALTER TABLE civievent_discount ADD COLUMN expiration datetime");
}

// Add contribution id, object_id, object_type to tracking.
function civievent_discount_update_6009() {
  db_query("ALTER TABLE civievent_discount_track ADD COLUMN contribution_id int unsigned");
  db_query("ALTER TABLE civievent_discount_track ADD COLUMN object_id int unsigned NOT NULL");
  db_query("ALTER TABLE civievent_discount_track ADD COLUMN object_type text");
  
  return array();
}

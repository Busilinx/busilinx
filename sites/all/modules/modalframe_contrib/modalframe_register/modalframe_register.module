<?php
// $Id:

/**
 * @file
 * Opens Login and Register forms in a modal window.
 */
 

/*
 * Implementing hook_init
 */
function modalframe_register_init() {
  if ($_GET['q'] == 'modal/register' || $_GET['q'] == 'modal/login' || $_GET['q'] == 'modal/register/welcome') {
    modalframe_child_js();
  } else {
    modalframe_parent_js();
    drupal_add_js(drupal_get_path('module', 'modalframe_register') .'/modalframe_register.js');
    }
}

/**
 * Implementation of hook_perm().
 */
function modalframe_register_perm() {
  return array('access modalframe register');
}

/**
 * Implementing hook_block
 */

function modalframe_register_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0] = array(
    'info' => t('Modal Frame Register/Login'),
    );
    return $blocks;
  }
  if ($op == 'view') {
    if ($delta == 0) {
    $block['subject'] = t('Modal Frame Login/Register');
    $block['content'] = modal_register_get_login_block_content();
    return $block;
    }
  }
}

/**
 * The guts of the block with the modal register and login links on parent page
 */
 
function modal_register_get_login_block_content() {
  global $user;
  $user_uri = theme('my_account_link', array());
  $login_uri = theme('user_login_link', array(), array());
  $register_uri = theme('user_register_link', array(), array());
  $logout_uri = theme('user_logout_link', array());
  if (user_is_anonymous()){
    $block_content = '<div id="modalframe_register_block_anonymous"><div id="modalframe_login">'. $login_uri .'</div><div id="modalframe_register">' . $register_uri ."</div></div>";
    return $block_content;
  }
  else{
    $block_content = "<div id='modalframe_register_block_authenticated'><span class='modalframe_register_user_name'>". theme('username', $user) ."</span><span class='modalframe_register_account_link'>". $user_uri . '</span><span class="modalframe_register_logout_link">' . $logout_uri ."</span></div>";
    return $block_content;
  }
}

/**
 *  Theme functions for modal frame register, login, logout, and my account links
 */

function modalframe_register_theme($existing, $type, $theme, $path) {
  return array(
    'user_login_link' => array(
    'arguments' => array('attributes' => array(), 'query' => array('query' => drupal_get_destination())),
    ),
    'user_register_link' => array(
      'arguments' => array('attributes' => array(), 'query' => array('query' => drupal_get_destination())),
    ),
    'user_logout_link' => array(
      'arguments' => array('attributes' => array('query' => drupal_get_destination())),
    ),
    'my_account_link' => array(
      'arguments' => array('attributes' => array()),
    ),
  );
}

/**
 *  Theme the user login link
 */

function theme_user_login_link($attributes, $query) {
  $attributes['class'] = $attributes['class'].' gomodal';
  $login_uri = l(t('Login'), 'modal/login',array('attributes'=>$attributes, 'query'=>$query));
  return $login_uri;
}

/**
 *  Theme the registration link
 */

function theme_user_register_link($attributes, $query){
  $attributes['class'] = $attributes['class'].' gomodal';
  $register_uri = user_register_access()? l(t('Register'), 'modal/register',array('attributes'=>$attributes, 'query'=>$query)) : '';
  return $register_uri;
}

/**
 *  Theme the logout link
 */
 
function theme_user_logout_link($attributes){
  $logout_uri = l(t('Logout'),'logout', array('attributes'=>$attributes));
  return $logout_uri;
}

/**
 *  Theme the My Account link
 */
 
function theme_my_account_link($attributes){
  global $user;
  $url = 'user/' . $user->uid;
  if ( module_exists('path') ) {
    $url = drupal_get_path_alias($url);
  }
  $user_uri = l(t('My Account'), $url, array('attributes'=>$attributes));
  return $user_uri;
}

/**
 * Implementation of hook_menu().
 */
 
function modalframe_register_menu() {
  $items = array();
  // This is the parent window, from where all examples are available.
  $items['modal/login'] = array(
    'title' => t('Login'),
    'page callback' => 'modalframe_register_get_login_form', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['modal/register'] = array(
    'title' => t('Register'),
    'page callback' => 'modalframe_register_get_register_form', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['modal/register/welcome'] = array(
    'title' => t('Registration Details'),
    'page callback' => 'modalframe_register_get_welcome',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,  
  );
  return $items;
}



/**
 * Menu callback; login form in child window.
 */
function modalframe_register_get_login_form() {
  // Send the Modal Frame javascript for child windows to the page.
  modalframe_child_js();
  // get the forms from the user module
  module_load_include('inc', 'user', 'user.pages');
  $login = drupal_get_form('user_login');
  $pass  = drupal_get_form('user_pass');
  $forgot_title = t('Forgot Your Password?');
  // Render the page contents.
  return $login.'<div><h3>'.$forgot_title.'</h3></div>'.$pass;
}

/**
 * Menu callback; registration form in child window.
 */
function modalframe_register_get_register_form() {
  // Send the Modal Frame javascript for child windows to the page.
  modalframe_child_js();
  // Render the page contents.
  // module_load_include('inc', 'user', 'user.pages');
  return drupal_get_form('user_register');
}

/**
 * Menu callback; registration Welcome Page child window.
 */
function modalframe_register_get_welcome() {
  // Send the Modal Frame javascript for child windows to the page.
  modalframe_child_js();
  // Render the page contents.
  $output = t('Thank You! Your registration is accepted. Please check your email for further instructions to instantly activate your account.');
  return $output;
}

/**
 * Implementation of hook_form_alter().
 *
 * This function is needed to give special handlers to child windows.
 */

function modalframe_register_form_alter(&$form, $form_state, $form_id) {
  // Append our submit handler. This is required if we want a chance to
  // close the modal frame dialog.
  $form['#submit'][] = 'modalframe_register_form_submit';
  if ($form_id == 'user_register') {
    $form['#redirect'] = 'modal/register/welcome';
  }
}

/**
 * Submit handler for our node edit form example.
 *
 */
 
function modalframe_register_form_submit($form, &$form_state) {
  if ($form_state['values']['op'] == t('Log in')) {
    modalframe_close_dialog(array(
      'message' => t('Processing the Form...'),
    ));
  }
}
